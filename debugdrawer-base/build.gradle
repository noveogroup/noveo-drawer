apply plugin: 'com.android.library'
apply plugin: "me.tatarka.retrolambda"
apply plugin: "com.noveogroup.android.check"

android {
    compileSdkVersion sdkVersions.compileSdk
    buildToolsVersion sdkVersions.buildTools

    defaultConfig {
        minSdkVersion sdkVersions.minSdk
        targetSdkVersion sdkVersions.targetSdk
        versionCode buildVersions.code
        versionName buildVersions.name
    }

    buildTypes {
        debug {
            debuggable true
            matchingFallbacks = ['release']
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    variantFilter { variant ->
        if(variant.buildType.name.endsWith('debug')) {
            variant.setIgnore(true);
        }
    }

    lintOptions {
        abortOnError true
        checkAllWarnings true
        disable "AllowBackup"
        disable "ContentDescription"
        disable "InvalidPackage"
        disable "RequiredSize"
        disable "SpUsage"
        disable "IconMissingDensityFolder"
        disable "SelectableText"
        disable "RtlCompat", "RtlEnabled", "RtlHardcoded", "RtlSymmetry"
        disable "MissingPrefix"
    }

    sourceSets {
        main.res.srcDirs = [
                'src/main/res',
                'src/main/res-public'
        ]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    /* test dependencies */
    testImplementation libraries.junit
    testImplementation libraries.mockitoCore

    /* Support Libraries */
    implementation libraries.supportAppCompat

    /* Logging */
    implementation libraries.slf4j

    /* Palamia DebugDrawer extension for*/
    implementation libraries.debugDrawerBase
}

check {
    abortOnError true
    checkstyle { config rootProject.file('analyzers/checkstyle.xml').absolutePath }
    pmd { config rootProject.file('analyzers/pmd.xml').absolutePath }
    findbugs { skip true }
}

apply from: rootProject.file('gradle/mvn-push.gradle')
