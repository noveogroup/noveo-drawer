apply plugin: 'com.android.library'
apply plugin: "com.noveogroup.android.check"

android {
    compileSdkVersion sdkVersions.compileSdk
    buildToolsVersion sdkVersions.buildTools

    defaultConfig {
        minSdkVersion sdkVersions.minSdk
        targetSdkVersion sdkVersions.targetSdk
        versionCode buildVersions.code
        versionName buildVersions.name
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        checkAllWarnings true
        disable "AllowBackup"
        disable "ContentDescription"
        disable "InvalidPackage"
        disable "SpUsage"
        disable "IconMissingDensityFolder"
        disable "SelectableText"
        disable "RtlCompat", "RtlEnabled", "RtlHardcoded", "RtlSymmetry"
        disable "MissingPrefix"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    /* test dependencies */
    testImplementation libraries.junit
    testImplementation libraries.mockitoCore
    testImplementation libraries.leakCanaryNoOp

    /* Support Libraries */
    implementation libraries.slf4j
    implementation libraries.rxJava2

    /* Useful libraries */
    api libraries.stetho
    implementation libraries.streamSupport
    implementation libraries.noveoPreferences
    implementation libraries.phoenix

    debugApi libraries.debugDrawer
    releaseApi libraries.debugDrawerNoOp

    debugApi libraries.leakCanary
    releaseApi libraries.leakCanaryNoOp
    debugApi libraries.debugDrawerView
    releaseApi libraries.debugDrawerViewNoOp
}

check {
    abortOnError true
    checkstyle { config rootProject.file('analyzers/checkstyle.xml').absolutePath }
    pmd { config rootProject.file('analyzers/pmd.xml').absolutePath }
    findbugs { skip true }
}
